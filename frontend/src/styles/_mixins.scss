@mixin breakpoint($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {
    @if $min == xs {
      @media (max-width: 767px) {
        @content;
      } // Mobile Devices
    } @else if $min == sm {
      @media (min-width: 768px) {
        @content;
      } // Tablet Devices
    } @else if $min == md {
      @media (min-width: 992px) {
        @content;
      } // Desktops
    } @else if $min == lg {
      @media (min-width: 1200px) {
        @content;
      } // Widescreen Desktops
    }

    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: xs, sm, md, lg";
    }
  } @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if $min != 0 and $max != 0 {
      $query: "(min-width: #{$min}) and (max-width: #{$max})";
    } // set both min and max
    @else if $min != 0 and $max == 0 {
      $query: "(min-width: #{$min})";
    } // set just min
    @else if $min == 0 and $max != 0 {
      $query: "(max-width: #{$max})";
    } // set just max
    @media #{$query} {
      @content;
    }
  }
}

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin reset-list {
  list-style: none;
  margin: 0;
  padding: 0;

  > li {
    margin: 0;
    padding: 0;
  }
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin reset-box-model {
  margin: 0;
  padding: 0;
  border: 0;
}
